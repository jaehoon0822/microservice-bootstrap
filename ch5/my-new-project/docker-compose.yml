version: "3"
services:
  rabbit:
    image: rabbitmq:3.12.8-management-alpine
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:5672"]
    #   interval: 30s
    #   timeout: 60s
    #   retries: 10
    restart: always

  db:
    image: mongo
    container_name: db
    ports:
      - 4000:27017
    restart: always
  video-streaming:
    image: video-streaming
    build:
      context: ./video-streaming
      dockerfile: Dockerfile-dev
    container_name: video-streaming
    volumes:
      - ~/.npm/_cacache:/root/.npm/_cacache
      - ./video-streaming/src:/usr/app/src
      - ./video-streaming/videos:/usr/app/videos
    ports:
      - 4001:80
    environment:
      - PORT=80
      - NODE_ENV=development
      - RABBIT=amqp://guest:guest@rabbit:5672
    restart: "no"
    depends_on:
      - rabbit

  history:
    image: history
    build:
      context: ./history
      dockerfile: Dockerfile-dev
    container_name: history
    volumes:
      - ~/.npm/_cacache:/root/.npm/_cacache
      - ./history/src:/usr/app/src
    ports:
      - 4002:80
    environment:
      - PORT=80
      - NODE_ENV=development
      - RABBIT=amqp://guest:guest@rabbit:5672
      - RABBIT_URL=rabbit
      - DBHOST=mongodb://db:27017
      - DBNAME=history
    depends_on:
      - db
      - rabbit
    restart: "on-failure"

  recommendation:
    image: recommendation
    build:
      context: ./recommendation
      dockerfile: Dockerfile-dev
    container_name: recommendation
    volumes:
      - ~/.npm/_cacache:/root/.npm/_cacache
      - ./recommendation/src:/usr/app/src
    ports:
      - 4003:80
    environment:
      - PORT=80
      - NODE_ENV=development
      - RABBIT=amqp://guest:guest@rabbit:5672
      - RABBIT_URL=rabbit
      - DBHOST=mongodb://db:27017
      - DBNAME=recommendation
    depends_on:
      - db
      - rabbit
    links:
      - rabbit
    restart: "on-failure"
